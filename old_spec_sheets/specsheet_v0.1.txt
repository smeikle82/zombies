Project Specification Sheet: Zombie Outbreak Simulator (Grid-based)

Version: 0.1 (Initial Implementation)
Date: April 6, 2025

1. Project Overview:
A simple, web-based simulation modeling a zombie outbreak on a 2D grid. Inspired by Conway's Game of Life but with active entities and direct interactions. The simulation visualizes the spread of zombies as they infect humans upon collision.

2. Core Concept:
Entities (Humans, Zombies) move on a grid. When a Zombie collides with a Human, the Human becomes a Zombie. Weapons exist visually but are not yet interactive.

3. Target Platform:
Modern Web Browsers supporting HTML5, CSS3, and JavaScript (ES6+).

4. Technology Stack:

HTML: Structure the webpage (containing the simulation display area).
CSS: Basic styling for the page elements.
JavaScript: Core simulation logic, entity management, state updates, and rendering (HTML Canvas API recommended for rendering the grid).
5. Environment Specifications:

Type: 2D Grid.
Size: 50x50 cells.
Boundaries: Toroidal (entities wrapping around edges - e.g., moving left from column 0 appears in column 49).
Obstacles: None in this version (open field).
6. Entity Specifications:

Humans:
Representation: Colored block/square.
Color: White (when unarmed). Orange (when armed - note: weapon functionality is not in v0.1, but the color state can be prepared).
Initial State: ALIVE, hasWeapon = false.
Behavior (v0.1): Attempts a random walk each tick (tries to move to a random adjacent cell: up, down, left, or right).
Movement Constraints: Can only move into an empty cell. Cannot move into cells occupied by other Humans or Zombies. Stays put if chosen move is invalid. Respects toroidal boundaries.
Zombies:
Representation: Colored block/square.
Color: Green.
Initial State: ZOMBIE.
Behavior (v0.1): Attempts a random walk each tick (tries to move to a random adjacent cell).
Movement Constraints: Can move into an empty cell or a cell occupied by a Human. Cannot move into cells occupied by other Zombies. Stays put if chosen move is invalid (and not into a Human). Respects toroidal boundaries.
Weapons:
Representation: Colored block/square.
Color: Red.
Initial State: ON_GROUND.
Behavior (v0.1): Stationary. No interaction logic implemented yet. Entities can currently move into the same cell as a weapon without effect.
7. Core Mechanics:

Simulation Loop: The simulation state updates at a fixed rate of 2 times per second (every 500 milliseconds). setInterval(tickFunction, 500) is recommended.
Update Logic (per tick):
Determine Intentions: For each Human and Zombie, determine its intended move based on its current behavior rules (random walk).
Resolve Conflicts & Interactions: Check the target cell for each intended move:
If invalid (blocked by same entity type, etc.), cancel the move for that entity.
If a Zombie intends to move into a Human's cell, flag that Human for infection. The move is considered successful.
All other valid moves are marked as successful.
Apply State Changes: Create the state for the next tick:
Move entities that had successful moves to their new grid positions.
Change the state of any flagged Humans to ZOMBIE.
Infection: Occurs when a Zombie successfully moves into a cell occupied by a Human. The transformation takes effect in the subsequent tick.
8. Initial State & Spawning:

The simulation starts with the following entities placed randomly on unique, empty cells:
1 Zombie
100 Humans
15 Weapons
9. Visual Style:

Rendered preferably using the HTML Canvas API.
Display the grid clearly.
Use specified block colors for entities.
Use a neutral background color for empty cells (e.g., Black, Dark Grey).
10. Future Considerations (Post v0.1):

Implement obstacles/barriers (impassable cells).
Implement weapon pickup mechanic.
Implement combat (armed human vs. zombie interaction).
Develop more advanced AI (fleeing, hunting, basic pathfinding).
Add UI controls (start, stop, reset, parameter adjustments).

11. Suggestions (from AI review of v0.1):

-   **Movement Conflict Resolution:** Clarify the rule for resolving conflicts when two entities (e.g., two Humans, or a Human and a Zombie not targeting the Human's current cell) intend to move into the *same* empty target cell in the same tick. (e.g., random winner, both fail, prioritized entity type?).
-   **Order of Operations:** Explicitly define the precise order of operations within the "Update Logic (per tick)" section, especially confirming when simultaneous move conflicts are resolved relative to infection checks.
-   **Human `hasWeapon` State:** Consider deferring the implementation of the `hasWeapon` state and the associated orange color until the weapon pickup mechanic (planned for post v0.1) is actively being developed, to keep v0.1 strictly focused.
-   **Entity/Weapon Co-location:** Confirm the intended behavior that Humans and Zombies *can* occupy the same grid cell as a stationary Weapon simultaneously in v0.1.
-   **Initial Spawning Logic:** Ensure the random spawning mechanism is robust and can reliably find unique, empty cells, especially considering the density of entities (101 entities + 15 weapons on a 2500 cell grid).